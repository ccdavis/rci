
fun fib(n:Num): Num{
	var i = 0;
	var sum = 0;
	var first = 0;
	var second = 1;

	while i <= n {
		if i <= 1 {
			sum := 1;
		} else {
			sum := first + second;
			first := second;
			second := sum;
		}
		i := i + 1;
	}
	return sum;
}


fun recursive_fib(n:Num) : Num {
	if n < 2 { return n;}
	return recursive_fib(n-1) + recursive_fib(n-2);
}

val x1 = 2.5

{
	val x2 = 3.5

	var start0 = std@clock();
	print "Pi: ", std@pi,"\n"
	print x1,"\n"
	print x2,"\n"
	
	print fib(55),"\n"
	print std@clock() - start0,"\n"
	print " ","\n"

	var start = std@clock();
	print recursive_fib(40),"\n"
	print std@clock() - start,"\n"
}


	